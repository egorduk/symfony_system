security:
    encoders:
        # Our user class and the algorithm we'll use to encode passwords
        # http://symfony.com/doc/current/book/security.html#encoding-the-user-s-password
        AuthBundle\Entity\User:
#        Symfony\Component\Security\Core\User\User:
            algorithm: sha512
            encode-as-base64: true
            iterations: 10

    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER, ROLE_MANAGER]

    providers:
        # in this example, users are stored via Doctrine in the database
        # To see the users at src/AppBundle/DataFixtures/ORM/LoadFixtures.php
        # To load users from somewhere else: http://symfony.com/doc/current/cookbook/security/custom_provider.html
        database_users:
            entity: { class: AuthBundle:User, property: email }
#        in_memory:
#            memory:
#                users:
#                    user:
#                        password: 123456
#                        roles: 'ROLE_USER'
#                    admin:
#                        password: 123456
#                        roles: 'ROLE_ADMIN'
#                    ryan:
#                        password: $2a$12$LCY0MefVIEc3TYPHV9SNnuzOfyr2p/AXIGoQJEDs4am4JwhNz/jli
#                        roles: 'ROLE_USER'

    # http://symfony.com/doc/current/book/security.html#firewalls-authentication
    firewalls:
#        default:
#            anonymous: ~
#            http_basic: ~
#        main:
            #pattern: ^/
#            anonymous: ~
            #logout: ~
#            form_login:
#                login_path: login
#                check_path: login
            #http_basic: ~
            #provider: our_db_provider
#        secured_area:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        secured_area:
            pattern: ^/
            anonymous: true
            form_login:
                check_path: login
                login_path: login
                default_target_path: secure_index
                use_referer: true
                #failure_path: login_failure
                #always_use_default_target_path: true
                csrf_token_generator: security.csrf.token_manager

            logout:
                path: /logout
                target: login

    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/secure, roles: [ ROLE_USER, ROLE_AUTHOR ] }
        #- { path: ^/secure, roles: ROLE_AUTHOR }